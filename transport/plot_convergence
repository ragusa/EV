#!/usr/bin/env perl
# reads the input file to determine which problem was
# just run and then plots the convergence
# with gnuplot and then views the resulting plot with evince

use strict;

# option to crop pdf to remove excess whitespace
my $crop_file = 1;

# read input file to determine the test problem ID
my $input_file = "input";
open(IN, '<', $input_file) or die $!;
my $input_line; # input file line
my @input_line; # array of fields of input line
my $problem_ID; # problem ID
while ($input_line = <IN>) {
   chomp($input_line);
   @input_line = split /\s+=\s+/, $input_line;
   if ($input_line[0] eq "set Problem ID") {
      $problem_ID = $input_line[1];
      last;
   }
}

# go to plotscripts directory
chdir "plotscripts";

# call gnuplot
my $convergence_file_L1 = "../plots/convergence_$problem_ID"."_L1.pdf";
my $convergence_file_L2 = "../plots/convergence_$problem_ID"."_L2.pdf";
system("gnuplot -e 'problem_ID=$problem_ID' convergence.gp");
system("sleep 1");

# crop pdf if specified
if ($crop_file)
{
   system("pdfcrop $convergence_file_L1 $convergence_file_L1");
   system("pdfcrop $convergence_file_L2 $convergence_file_L2");
}

# view output
system("evince $convergence_file_L1");
system("evince $convergence_file_L2");
